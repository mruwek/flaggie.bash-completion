# FlagEdit Bash Shell Command Completion

#
# Retrieve PORTDIR/PORTDIR_OVERLAY location from user's make.conf or, if it
# is not defined there, from make.globals.
#
# (copied from gentoo-bashcomp)
#
_portdir()
{
    (
    source /etc/make.globals 2>/dev/null
    source /etc/make.conf 2>/dev/null

    if [[ $1 == '-o' ]] ; then
        echo ${PORTDIR_OVERLAY}
    fi
    echo ${PORTDIR}
    )
}

#
# This function completes package names.
#
# (some parts inspired by gentoo-bashcomp)
#
_flagedit_pkgname()
{
    local cur portdir
    cur="$1"
    portdir=$(_portdir -o)
    # Ignore '=' at the beginning of the current completion
    [[ ${cur:1:1} == "=" ]] && cur=${cur:2}
    [[ ${cur:0:1} == "=" ]] && cur=${cur:1}

    # Package name
    if [[ $cur == */* ]]; then
        COMPREPLY=($(\
            for pd in ${portdir}; do
                builtin cd ${pd};
                compgen -X "*metadata.xml" -W "$(compgen -G "$cur*" )" -- $cur;
            done))
    # Here we are looking for category
    else
        # 1. Collect all the categories among ${portdir}
        ww=$(\
            for pd in ${portdir}; do
                builtin cd ${pd};
                compgen -X "!*-*" -S '/' -G "$cur*";
            done)

        # 2. Now ugly hack to delete duplicate categories
        local w
        for x in ${ww} ; do w="${x}\n${w}"; done
        words=$(echo -e ${w} | sort -u)

        COMPREPLY=($(compgen -W "$words" -- $cur))
    fi
    # Check if we just have finished completing the category.
    if [[ ${#COMPREPLY[@]} == 1 ]]; then
        COMPREPLY=($(\
            for pd in ${portdir}; do
                builtin cd ${pd};
                compgen -W "$(compgen -G "$COMPREPLY*")" -- $cur*;
            done))
    fi
}
_flagedit_use(){
    local mode cur prev portdir atom use
    mode="$1"
    cur="$2"
    pkg=${COMP_WORDS[1]}
    portdir=$(_portdir -o)
    atom=(`qatom "${pkg}"`)
    if [[ ${atom[2]} == "(null)" ]]; then
        iuse=$(\
            for pd in ${portdir}; do
                builtin cd ${pd}/metadata/cache/${atom[0]} 2>/dev/null;
                for pkgcache in `ls | grep ${atom[1]}-[[:digit:]]`; do
                    sed -n "11 p" $pkgcache | sed -e 's/linguas_.\{2,5\} //g;s/\(\s\)[-+]\|^[-+]/\1/g';
                done
            done)
    else
        if [[ ${atom[3]} == "" ]]; then
            iuse=$(\
                for pd in ${portdir}; do
                    builtin cd ${pd}/metadata/cache/${atom[0]} 2>/dev/null;
                    pkgcache="${atom[1]}-${atom[2]}";
                    sed -n "11 p" $pkgcache 2>/dev/null | sed -e 's/linguas_.\{2,5\} //g;s/\(\s\)[-+]\|^[-+]/\1/g';
                done)
        else
            iuse=$(\
                for pd in ${portdir}; do
                    builtin cd ${pd}/metadata/cache/${atom[0]} 2>/dev/null;
                    pkgcache="${atom[1]}-${atom[2]}-${atom[3]}";
                    sed -n "11 p" $pkgcache 2>/dev/null | sed -e 's/linguas_.\{2,5\} //g;s/\(\s\)[-+]\|^[-+]/\1/g';
                done)
        fi
    fi

    if [[ $mode == "enable" ]]; then
        iuse=`echo $iuse | sed -e 's/\(^\| \)/\1+/g'`;
    elif [[ $mode == "disable" ]]; then
        iuse=`echo $iuse | sed -e 's/\(^\| \)/\1-/g'`;
    elif [[ $mode == "reset" ]]; then
        iuse=`echo $iuse | sed -e 's/\(^\| \)/\1%/g'`;
    fi

    COMPREPLY=($(compgen -W "$iuse" -- "$cur"));

}

#
# Main completion function for flagedit
#

_flagedit()
{
    local cur mode portdir use atom
    portdir=$(_portdir)
    COMPREPLY=()
    prev="$3"
    cur="$2"

    case "${prev}" in
        flagedit)
            _pkgname -A $cur
        ;;
        *)
            case "${cur}" in
                -*)
                    _flagedit_use disable $cur
                ;;
                %*)
                    _flagedit_use reset $cur
                ;;
                *)
                    _flagedit_use enable $cur
                ;;
            esac
        ;;
    esac
}
complete -F _flagedit flagedit
